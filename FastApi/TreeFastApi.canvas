{
	"nodes":[
		{"id":"65da2b3d764118c5","type":"file","file":"Fast-Api/config env.md","x":1205,"y":-1998,"width":495,"height":378},
		{"id":"2b96bd03f1356964","type":"text","text":"# Переменные окружения проекта","x":640,"y":-1814,"width":262,"height":148},
		{"id":"eab791ec1050c186","type":"file","file":"Fast-Api/файл .env.md","x":1200,"y":-2360,"width":506,"height":167},
		{"id":"81d0cf8483cb60cc","type":"file","file":"Fast-Api/Конфиг проекта.md","subpath":"#Конфиг проекта","x":285,"y":-1046,"width":355,"height":79},
		{"id":"98ff5caa4e81d8fa","type":"file","file":"SqlAlchemy/Подключение базы данных и SQLAlchemy к FastAPI.md","x":519,"y":1509,"width":341,"height":231,"color":"6"},
		{"id":"4559dd56a6750957","type":"text","text":"# pip install aiosqlite==0.17.0","x":1001,"y":1671,"width":459,"height":89},
		{"id":"0cfa4bcdbe485ed4","type":"file","file":"Fast-Api/файл .env.md","x":978,"y":1940,"width":506,"height":167},
		{"id":"46aa46206bcca5a7","type":"file","file":"Fast-Api/config env.md","x":983,"y":2320,"width":501,"height":360},
		{"id":"af5f52542a9e8caa","type":"text","text":"# pip install sqlalchemy==1.4.36","x":1720,"y":1663,"width":515,"height":105},
		{"id":"05515d6bbcc6f277","type":"text","text":"# создание асинхронного движка в SQLAlchemy используется функция `create_async_engine()`, по своему поведению она практически идентична синхронной функции `create_engine()`","x":1728,"y":1940,"width":499,"height":316},
		{"id":"2fec6e70920bfb4e","type":"text","text":"# app/core/db.py\n```python\n# app/core/db.py\nfrom sqlalchemy.orm import declarative_base\nBase = declarative_base()\n```","x":1725,"y":2387,"width":504,"height":227},
		{"id":"56ebe0dbff4b28bd","type":"text","text":"# # app/core/db.py \n```python\n# Все классы и функции для асинхронной работы\n# находятся в модуле sqlalchemy.ext.asyncio\nfrom sqlalchemy.ext.asyncio import create_async_engine\nfrom sqlalchemy.orm import declarative_base\nfrom app.core.config import settings\n\nBase = declarative_base()\n\nengine = create_async_engine(settings.database_url)\n```","x":1657,"y":2760,"width":642,"height":360},
		{"id":"b16318fa16604f3c","type":"text","text":"# # app/core/db.py\n\n```python\nfrom sqlalchemy import Column, Integer\nfrom sqlalchemy.ext.asyncio import AsyncSession, create_async_engine\nfrom sqlalchemy.orm import declarative_base\n\nfrom app.core.config import settings\n\n# В качестве основы для базового класса укажем класс PreBase.\nBase = declarative_base(cls=PreBase)\n\nengine = create_async_engine(settings.database_url)\n\nasync_session = AsyncSession(engine)\n```","x":1657,"y":3360,"width":642,"height":400},
		{"id":"cb60b8b13396938a","type":"text","text":"В строке `async_session = AsyncSession(engine)` создаётся только один объект сессии, а для работы асинхронного приложения потребуется постоянно открывать и закрывать сессии: для каждого запроса — своя сессия.\n\nЧтобы множественно создавать сессии — примените функцию `sessionmaker()` из модуля `sqlalchemy.orm`.\n\nВ параметры этой функции передаётся объект движка и класс, на основе которого должна создаваться сессия. Функция `sessionmaker()` возвращает класс сессии, поэтому переменную, которой присвоена функция, назовите с большой буквы: `AsyncSessionLocal`; такое имя будет указывать, что переменной присвоен класс.","x":2480,"y":1663,"width":520,"height":377},
		{"id":"0492475cd210d3ad","type":"text","text":"# # app/core/db.py\n```python\nfrom sqlalchemy.ext.asyncio import AsyncSession, create_async_engine\nfrom sqlalchemy.orm import declarative_base, sessionmaker\nfrom app.core.config import settings\n\nBase = declarative_base()\n\nengine = create_async_engine(settings.database_url)\n\nAsyncSessionLocal = sessionmaker(engine, class_=AsyncSession)\n```","x":2480,"y":2207,"width":586,"height":360},
		{"id":"76c2ea69cb7902cb","type":"file","file":"SqlAlchemy/PreBase класс - Расширенный базовый класс для моделей.md","x":3320,"y":1400,"width":440,"height":263},
		{"id":"4cfab2dbe2d259fe","type":"text","text":"```python\nclass PreBase:\n\t@declared_attr\n\tdef __tablename__(cls):\n\t\t# Именем таблицы будет название модели в нижнем регистре.\n\t\treturn cls.__name__.lower()\n\t# Во все таблицы будет добавлено поле ID.\n\tid = Column(Integer, primary_key=True)\n```","x":3320,"y":1844,"width":741,"height":254},
		{"id":"5071c513b1066d38","type":"text","text":"# app/core/db.py\n```python\n# Добавляем импорт классов для определения столбца ID.\nfrom sqlalchemy import Column, Integer\nfrom sqlalchemy.ext.asyncio import AsyncSession, create_async_engine\nfrom sqlalchemy.orm import declarative_base, declared_attr, sessionmaker\nfrom app.core.config import settings\n\nclass PreBase:\n\t@declared_attr\n\tdef __tablename__(cls):\n\t\t# Именем таблицы будет название модели в нижнем регистре.\n\t\treturn cls.__name__.lower()\n\t# Во все таблицы будет добавлено поле ID.\n\tid = Column(Integer, primary_key=True)\n\n# В качестве основы для базового класса укажем класс PreBase.\nBase = declarative_base(cls=PreBase)\n\nengine = create_async_engine(settings.database_url)\n\nAsyncSessionLocal = sessionmaker(engine, class_=AsyncSession)\n```","x":3341,"y":2280,"width":700,"height":533,"color":"4"},
		{"id":"1a5ef04fd3618c65","type":"file","file":"Fast-Api/Структура проекта.md","x":440,"y":122,"width":500,"height":618},
		{"id":"e834b7c1c6f2f021","type":"text","text":"```python\n# Импортируем из Алхимии нужные классы.\nfrom sqlalchemy import Column, String\n# Импортируем базовый класс для моделей.\nfrom app.core.db import Base\n\nclass MeetingRoom(Base):\n\n\t# Имя переговорки должно быть не больше 100 символов,\n\t# уникальным и непустым.\n\tname = Column(String(100), unique=True, nullable=False)\n```","x":2899,"y":-2336,"width":621,"height":296},
		{"id":"cdaadf0d61828a81","type":"file","file":"Fast-Api/Проброс данных .env из конфига проекта.md","x":1700,"y":-1006,"width":633,"height":331},
		{"id":"1f8cb4c8f3fb6e75","type":"file","file":"Fast-Api/main.py.md","x":1262,"y":-1320,"width":381,"height":143},
		{"id":"40d2371542e972bb","type":"link","url":"https://alembic.sqlalchemy.org/en/latest/tutorial.html#editing-the-ini-file","x":-2104,"y":880,"width":608,"height":480},
		{"id":"dd22fee958d78790","type":"file","file":"Alembic/Алебик команды + настройки.md","x":-2092,"y":1600,"width":584,"height":240},
		{"id":"55e66afe961ef134","type":"text","text":"\n# pip install alembic==1.7.7","x":-2014,"y":1960,"width":429,"height":80},
		{"id":"2aba9064c4a8f312","type":"text","text":"# Асинхронная инциализация алембика\n## alembic init --template async alembic","x":-1755,"y":2200,"width":518,"height":160,"color":"4"},
		{"id":"14ddcb1716598293","type":"text","text":"# Синхронный алембик\n## alembic init","x":-2389,"y":2201,"width":375,"height":159,"color":"1"},
		{"id":"1a53636650e33a93","type":"text","text":"# Настройка env.py в ALEMBIC/","x":-1748,"y":2500,"width":504,"height":89},
		{"id":"206276293a3dac82","type":"text","text":"# env.py\n\nДобавить импорт\n\n\n```python\nfrom dotenv import load_dotenv\n```\nПрокинуть данные из .env\n\n```python\nload_dotenv('.env')\n# указывать абсолютный путь как правило не обязательно, потому пишем:\nload_dotenv()\n```\n\nУстановим для переменной sqlalchemy.url значение из нашего .env файла.\n\n```python\nconfig.set_main_option('sqlalchemy.url', os.environ['DATABASE_URL'])\n```","x":-1832,"y":2800,"width":672,"height":458},
		{"id":"a6c52c649b579675","type":"text","text":"# Берет часть данных из ENV","x":-310,"y":2528,"width":340,"height":79},
		{"id":"cff381eda3ed3f8e","type":"text","text":"# # Автоматическое создание миграций","x":-1687,"y":3440,"width":383,"height":144},
		{"id":"9b5dca45f85b9775","type":"text","text":"Внесение изменений в базу данных при помощи миграций происходит в два этапа:\n\n1. Создание файла миграции (файла со списком необходимых изменений); выполняется командой `alembic revision`;\n2. Применение миграций — фактическое внесение в БД тех изменений, которые описаны в файле миграции; выполняется командой `alembic upgrade` или, если речь идёт об отмене миграций — командой `alembic downgrade`.","x":-1721,"y":3700,"width":451,"height":353,"color":"1"},
		{"id":"2c6db3244626f913","type":"text","text":"# # app/core/base.py\n```python\n\"\"\"Импорты класса Base и всех моделей для Alembic.\"\"\"\nfrom app.core.db import Base\nfrom app.models.meeting_room import MeetingRoom\n```","x":-360,"y":3760,"width":480,"height":213},
		{"id":"085539833903328f","type":"text","text":"# Чтобы не импортить инфу о моделях в alembic/env.py напрямую, можно создать прослойку","x":-1100,"y":3780,"width":440,"height":193},
		{"id":"7ca19e2a73ee37be","type":"link","url":"https://alembic.sqlalchemy.org/en/latest/autogenerate.html#auto-generating-migrations","x":-2720,"y":3312,"width":400,"height":400},
		{"id":"e05f9d2912f705b2","type":"text","text":"# пустая команда, для отладки миграций\n```bash\nalembic current\n```","x":-1051,"y":4120,"width":343,"height":201},
		{"id":"54e9a9730bc07ab1","type":"text","text":"# Сюда можно сваливать все импорты моделей и не забыть указать # noqa чтобы линтер не ругался","x":-336,"y":3384,"width":433,"height":200},
		{"id":"a72f3340923e480b","type":"text","text":"# Можно напрямую, но гибкость улетучится, и нельзя будет к примеру готовые настройки скопипастить в другой проект","x":-1143,"y":3407,"width":526,"height":210,"color":"1"},
		{"id":"5525f4d5caea3240","type":"text","text":"# alembic/env.py\n```python\nfrom app.core.db import Base\n# Импортируем модель переговорки.\nfrom app.models.meeting_room import MeetingRoom\n...\ntarget_metadata = Base.metadata\n# Распечатаем информацию о таблицах:\nprint(target_metadata.tables)\n```","x":-708,"y":2956,"width":466,"height":302,"color":"1"},
		{"id":"cea5f89fc3c79538","type":"text","text":"# alembic revision --autogenerate -m \"First migration\"","x":-1336,"y":4560,"width":912,"height":113},
		{"id":"8ed32115349f5a98","type":"text","text":"## Неплохо бы зайти в миграцию и посмотреть, все ли ОК","x":-151,"y":4545,"width":402,"height":144},
		{"id":"4b984734dfb4846a","type":"file","file":"Alembic/Доп команды Alembic.md","x":-2500,"y":4217,"width":880,"height":1486},
		{"id":"562143b30e822d7a","type":"file","file":"Alembic/провести миграции Alembic.md","x":-1320,"y":4840,"width":880,"height":480},
		{"id":"c22d121dacca1cf2","type":"file","file":"Alembic/Гибкий запуск миграций.md","x":-1246,"y":5520,"width":733,"height":554},
		{"id":"95b84a85fd1e06e9","type":"text","text":"В FastApi структура проекта не как в Django, по сущностям, а по действиям с кодом и сущностями","x":964,"y":-201,"width":296,"height":141},
		{"id":"e67d8bab687adf93","type":"link","url":"https://fastapi.tiangolo.com/ru/tutorial/first-steps/","x":-748,"y":1183,"width":608,"height":480},
		{"id":"158351f13b46ad56","type":"file","file":"Fast-Api/Старт.md","x":-748,"y":-95,"width":608,"height":1053},
		{"id":"a2292a32c752bd4a","type":"link","url":"https://docs.pydantic.dev/latest/concepts/types/#booleans","x":-748,"y":-840,"width":608,"height":480},
		{"id":"0b2fcd2b6f66d0d7","type":"text","text":"# # app/models/meeting_room.py","x":2073,"y":385,"width":521,"height":93},
		{"id":"da793b9eeec31c52","type":"link","url":"https://docs.sqlalchemy.org/en/14/orm/declarative_mixins.html#augmenting-the-base","x":-2192,"y":205,"width":785,"height":360},
		{"id":"207df16c4c1944d9","type":"text","text":"# Вернутся и расписать валидацию/сериалайзеры","x":-640,"y":-1335,"width":398,"height":158,"color":"2"},
		{"id":"2ec8b3acf4ad7703","type":"text","text":"```\nbool_bot/\n\t├── app/\n\t| ├── core/\n\t| | ├── __init__.py\n\t| | ├── celery_config.py\n\t| | ├── config.py\n\t| | ├── db.py\n\t| | ├── utils.py\n\t| | └── base.py <-- для эндпоинтов\n\t| ├── crud/\n\t| ├── models/\n\t| ├── migrations/\n\t| ├── __init__.py\n\t| ├── alembic.py\n\t| └── main.py\n\t├── venv/\n\t├── .env\n\t├── docker-compose.yml\n\t└── Dockerfile\n```","x":1708,"y":798,"width":692,"height":582},
		{"id":"228dfa7229a87fdf","x":-1063,"y":-1464,"width":183,"height":64,"type":"text","text":"# Pydantic"}
	],
	"edges":[
		{"id":"87ed8c57ce8b6113","fromNode":"158351f13b46ad56","fromSide":"bottom","toNode":"e67d8bab687adf93","toSide":"top","color":"4","label":"FastApi"},
		{"id":"6051581ddfdc66d6","fromNode":"158351f13b46ad56","fromSide":"top","toNode":"a2292a32c752bd4a","toSide":"bottom","color":"1","label":"Pydantic"},
		{"id":"f2efa2e65818b114","fromNode":"da793b9eeec31c52","fromSide":"left","toNode":"40d2371542e972bb","toSide":"left","color":"6"},
		{"id":"8d018647eaabb192","fromNode":"40d2371542e972bb","fromSide":"top","toNode":"da793b9eeec31c52","toSide":"bottom","color":"6"},
		{"id":"75299cfc4f6ce7b3","fromNode":"158351f13b46ad56","fromSide":"left","toNode":"da793b9eeec31c52","toSide":"right","color":"6","label":"Alchemy"},
		{"id":"564ea3b531e97b59","fromNode":"158351f13b46ad56","fromSide":"left","toNode":"40d2371542e972bb","toSide":"right","label":"Alembic"},
		{"id":"2af7a941a2aeddee","fromNode":"2b96bd03f1356964","fromSide":"right","toNode":"65da2b3d764118c5","toSide":"left"},
		{"id":"0d40fad05941191b","fromNode":"65da2b3d764118c5","fromSide":"top","toNode":"eab791ec1050c186","toSide":"bottom","label":"database_url: str"},
		{"id":"736f6faba0918c68","fromNode":"eab791ec1050c186","fromSide":"bottom","toNode":"65da2b3d764118c5","toSide":"top"},
		{"id":"f2662caaf7b2ed53","fromNode":"158351f13b46ad56","fromSide":"right","toNode":"81d0cf8483cb60cc","toSide":"left"},
		{"id":"1ab843f1fd198a22","fromNode":"81d0cf8483cb60cc","fromSide":"top","toNode":"2b96bd03f1356964","toSide":"left","label":"env"},
		{"id":"772e783b418e19cf","fromNode":"65da2b3d764118c5","fromSide":"bottom","toNode":"1f8cb4c8f3fb6e75","toSide":"top","label":"пример проброса из .env"},
		{"id":"c00d28705e84136b","fromNode":"1f8cb4c8f3fb6e75","fromSide":"right","toNode":"cdaadf0d61828a81","toSide":"top"},
		{"id":"3214101159c43a2b","fromNode":"158351f13b46ad56","fromSide":"right","toNode":"98ff5caa4e81d8fa","toSide":"left"},
		{"id":"880466b60c4c8dcc","fromNode":"98ff5caa4e81d8fa","fromSide":"right","toNode":"4559dd56a6750957","toSide":"left"},
		{"id":"d1d3cab4f1ee39df","fromNode":"4559dd56a6750957","fromSide":"bottom","toNode":"0cfa4bcdbe485ed4","toSide":"top","label":"проброс настроек БД"},
		{"id":"23644e5416060eea","fromNode":"0cfa4bcdbe485ed4","fromSide":"bottom","toNode":"46aa46206bcca5a7","toSide":"top","label":"проброс инфы о БД в конфиг проекта"},
		{"id":"2d269998174c89c9","fromNode":"46aa46206bcca5a7","fromSide":"right","toNode":"af5f52542a9e8caa","toSide":"left"},
		{"id":"1100d56f20aebd56","fromNode":"af5f52542a9e8caa","fromSide":"bottom","toNode":"05515d6bbcc6f277","toSide":"top"},
		{"id":"c627478692e9fcda","fromNode":"05515d6bbcc6f277","fromSide":"bottom","toNode":"2fec6e70920bfb4e","toSide":"top"},
		{"id":"9876cae8a26629cf","fromNode":"2fec6e70920bfb4e","fromSide":"bottom","toNode":"56ebe0dbff4b28bd","toSide":"top","label":"проброс конфигов к движку из settings. ..."},
		{"id":"aa522d880adce11f","fromNode":"56ebe0dbff4b28bd","fromSide":"bottom","toNode":"b16318fa16604f3c","toSide":"top","label":"Для асинхронной работы сессии создаются при помощи класса AsyncSession"},
		{"id":"11d64aa737135ec8","fromNode":"b16318fa16604f3c","fromSide":"right","toNode":"cb60b8b13396938a","toSide":"left"},
		{"id":"d57f921bba55a51d","fromNode":"cb60b8b13396938a","fromSide":"bottom","toNode":"0492475cd210d3ad","toSide":"top"},
		{"id":"16b459e4d53ed2c5","fromNode":"98ff5caa4e81d8fa","fromSide":"top","toNode":"76c2ea69cb7902cb","toSide":"left"},
		{"id":"6dabae673e23a615","fromNode":"76c2ea69cb7902cb","fromSide":"bottom","toNode":"4cfab2dbe2d259fe","toSide":"top"},
		{"id":"5332ca7be723943c","fromNode":"4cfab2dbe2d259fe","fromSide":"bottom","toNode":"5071c513b1066d38","toSide":"top","color":"3"},
		{"id":"bc0cccb7089c8dee","fromNode":"0492475cd210d3ad","fromSide":"right","toNode":"5071c513b1066d38","toSide":"left","color":"3"},
		{"id":"9e91ea2676f22002","fromNode":"158351f13b46ad56","fromSide":"right","toNode":"1a5ef04fd3618c65","toSide":"left"},
		{"id":"f4fe1496e9bf3db1","fromNode":"1a5ef04fd3618c65","fromSide":"bottom","toNode":"98ff5caa4e81d8fa","toSide":"top","label":"core/"},
		{"id":"fc69fe5fe1b97912","fromNode":"1a5ef04fd3618c65","fromSide":"top","toNode":"81d0cf8483cb60cc","toSide":"bottom","label":"env and core/"},
		{"id":"fcecf425c3757bec","fromNode":"1a5ef04fd3618c65","fromSide":"right","toNode":"0b2fcd2b6f66d0d7","toSide":"left","label":"models"},
		{"id":"eba3b80127d7b0dc","fromNode":"0b2fcd2b6f66d0d7","fromSide":"top","toNode":"e834b7c1c6f2f021","toSide":"bottom","label":"models.py"},
		{"id":"7b7e15191b721bea","fromNode":"40d2371542e972bb","fromSide":"bottom","toNode":"dd22fee958d78790","toSide":"top","label":"\n"},
		{"id":"b4f0b2e8e08562dc","fromNode":"dd22fee958d78790","fromSide":"bottom","toNode":"55e66afe961ef134","toSide":"top"},
		{"id":"26d43ab6ca84c6a4","fromNode":"55e66afe961ef134","fromSide":"bottom","toNode":"2aba9064c4a8f312","toSide":"top"},
		{"id":"1d17df6e91ee7168","fromNode":"55e66afe961ef134","fromSide":"bottom","toNode":"14ddcb1716598293","toSide":"top"},
		{"id":"db9db39a000c7fa6","fromNode":"2aba9064c4a8f312","fromSide":"bottom","toNode":"1a53636650e33a93","toSide":"top"},
		{"id":"11367cdbc5750945","fromNode":"1a53636650e33a93","fromSide":"bottom","toNode":"206276293a3dac82","toSide":"top","label":"alembic/env.py"},
		{"id":"de8c190c8dca2d73","fromNode":"206276293a3dac82","fromSide":"right","toNode":"a6c52c649b579675","toSide":"left"},
		{"id":"d1c59bf8ab5de16f","fromNode":"a6c52c649b579675","fromSide":"right","toNode":"0cfa4bcdbe485ed4","toSide":"left"},
		{"id":"12bacd58d7a00927","fromNode":"0cfa4bcdbe485ed4","fromSide":"left","toNode":"a6c52c649b579675","toSide":"top"},
		{"id":"5879740331e3f4d9","fromNode":"a6c52c649b579675","fromSide":"bottom","toNode":"206276293a3dac82","toSide":"right"},
		{"id":"fb5a11fcc0f10c1e","fromNode":"cff381eda3ed3f8e","fromSide":"left","toNode":"7ca19e2a73ee37be","toSide":"right","label":"автогенерация миграций"},
		{"id":"27de4ef73b2e6ec9","fromNode":"206276293a3dac82","fromSide":"bottom","toNode":"cff381eda3ed3f8e","toSide":"top"},
		{"id":"48f283958214a994","fromNode":"cff381eda3ed3f8e","fromSide":"bottom","toNode":"9b5dca45f85b9775","toSide":"top"},
		{"id":"18eed6679ce296d1","fromNode":"9b5dca45f85b9775","fromSide":"right","toNode":"085539833903328f","toSide":"left"},
		{"id":"aec275a5198a8e6f","fromNode":"085539833903328f","fromSide":"right","toNode":"2c6db3244626f913","toSide":"left","label":"app/core/base.py"},
		{"id":"15e533fd15d01367","fromNode":"085539833903328f","fromSide":"bottom","toNode":"e05f9d2912f705b2","toSide":"top"},
		{"id":"3425672ba85600dd","fromNode":"54e9a9730bc07ab1","fromSide":"bottom","toNode":"2c6db3244626f913","toSide":"top"},
		{"id":"35beca5b12f71eff","fromNode":"085539833903328f","fromSide":"top","toNode":"a72f3340923e480b","toSide":"bottom"},
		{"id":"65c12650a321bc95","fromNode":"a72f3340923e480b","fromSide":"top","toNode":"5525f4d5caea3240","toSide":"left","color":"1","label":"BAD PRACTICE"},
		{"id":"f199e1372b4e996d","fromNode":"e05f9d2912f705b2","fromSide":"bottom","toNode":"cea5f89fc3c79538","toSide":"top","label":"Создание файлов миграций"},
		{"id":"36cc0effb58759f4","fromNode":"cea5f89fc3c79538","fromSide":"right","toNode":"8ed32115349f5a98","toSide":"left"},
		{"id":"57fd995604a1b9b2","fromNode":"cea5f89fc3c79538","fromSide":"bottom","toNode":"562143b30e822d7a","toSide":"top","label":"Применение миграций + команды"},
		{"id":"c0e71e4558005c2b","fromNode":"562143b30e822d7a","fromSide":"left","toNode":"4b984734dfb4846a","toSide":"right","label":"доп команды"},
		{"id":"f5782487b42d7b40","fromNode":"562143b30e822d7a","fromSide":"bottom","toNode":"c22d121dacca1cf2","toSide":"top"},
		{"id":"dd0e82167684ddd6","fromNode":"c22d121dacca1cf2","fromSide":"right","toNode":"562143b30e822d7a","toSide":"right"},
		{"id":"f32f132fe2a3f8bb","fromNode":"95b84a85fd1e06e9","fromSide":"bottom","toNode":"1a5ef04fd3618c65","toSide":"top"},
		{"id":"06ba466e49e4857c","fromNode":"a2292a32c752bd4a","fromSide":"top","toNode":"207df16c4c1944d9","toSide":"bottom","label":"schemas"},
		{"id":"4c5173ef3f5a087f","fromNode":"207df16c4c1944d9","fromSide":"left","toNode":"228dfa7229a87fdf","toSide":"right","label":"Pydantic"}
	]
}